@model SISGESAL.Models.ViewModels.DashboardViewModel

@{
    ViewBag.Title = "Dashboard";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2 class="text-center my-4">Panel de Control - Dashboard</h2>

<!-- Información del Usuario Identificador -->
<div class="text-center mb-4">
    <p>Usuario Identificador: @ViewData["UserID"]</p>
</div>

<!-- Fila de tarjetas de resumen -->
<div class="row text-center mb-4">
    <div class="col mb-4">
        <div class="card bg-primary text-white shadow">
            <div class="card-body">
                <h5>Total de Artículos</h5>
                <h3>@Model.TotalArticulos</h3>
                <i class="fas fa-boxes fa-3x"></i>
            </div>
        </div>
    </div>
    <div class="col mb-4">
        <div class="card bg-warning text-white shadow">
            <div class="card-body">
                <h5>Artículos Bajo Stock</h5>
                <h3>@Model.ArticulosBajoStock.Count()</h3>
                <i class="fas fa-exclamation-triangle fa-3x"></i>
            </div>
        </div>
    </div>
    <div class="col mb-4">
        <div class="card bg-success text-white shadow">
            <div class="card-body">
                <h5>Última Actualización</h5>
                <h3>@DateTime.Now.ToShortDateString()</h3>
                <i class="fas fa-calendar-alt fa-3x"></i>
            </div>
        </div>
    </div>
    <div class="col mb-4">
        <div class="card bg-info text-white shadow">
            <div class="card-body">
                <h5>Almacén Asignado</h5>
                <h3>@Model.NombreAlmacen</h3>
                <i class="fas fa-warehouse fa-3x"></i>
            </div>
        </div>
    </div>
    <div class="col mb-4">
        <div class="card bg-secondary text-white shadow">
            <div class="card-body">
                <h5>Total de Transacciones Realizadas</h5>
                <h3>@Model.TotalTransacciones</h3>
                <i class="fas fa-exchange-alt fa-3x"></i>
            </div>
        </div>
    </div>
</div>

<!-- Tabla de artículos bajo stock -->
<div class="card shadow mb-4">
    <div class="card-header py-3">
        <h6 class="m-0 font-weight-bold text-primary">Artículos Bajo Stock</h6>
    </div>
    <div class="card-body">
        <div class="table-responsive">
            <table class="table table-bordered table-striped" id="dataTable" width="100%" cellspacing="0">
                <thead class="thead-dark">
                    <tr>
                        <th>Código</th>
                        <th>Descripción</th>
                        <th>Stock</th>
                        <th>Fecha de Creación</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var articulo in Model.ArticulosBajoStock)
                    {
                        <tr>
                            <td>@articulo.CodigoArticulo</td>
                            <td>@articulo.DescripcionArticulo</td>
                            <td>@articulo.PuntoReorden</td>
                            <td>@articulo.FechaCreacion?.ToShortDateString()</td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>

        <!-- Paginación -->
        <div class="pagination">
            @if (ViewData["TotalPages"] is int totalPages)
            {
                for (int i = 1; i <= totalPages; i++)
                {
                    if (i == (int)ViewData["CurrentPage"])
                    {
                        <span class="current-page">@i</span> <!-- Página actual -->
                    }
                    else
                    {
                        <a href="@Url.Action("Index", new { pageNumber = i })" class="page-link">@i</a> <!-- Enlace a la página -->
                    }
                }
            }
        </div>
    </div>
</div>

<!-- Sección de gráficos -->
<div class="row mt-4">
    <div class="col-md-6 mb-4">
        <div class="card shadow">
            <div class="card-header">
                <h5 class="m-0 font-weight-bold text-info">Gráfico de Stock</h5>
            </div>
            <div class="card-body">
                <canvas id="stockChart"></canvas> <!-- Gráfico de stock -->
            </div>
        </div>
    </div>
    <div class="col-md-6 mb-4">
        <div class="card shadow">
            <div class="card-header">
                <h5 class="m-0 font-weight-bold text-info">Gráfico de Artículos Bajo Stock</h5>
            </div>
            <div class="card-body">
                <canvas id="articulosChart"></canvas> <!-- Gráfico de artículos bajo stock -->
            </div>
        </div>
    </div>
</div>

<!-- Estilos para los gráficos y la información -->
<style>
    /* Estilos para los gráficos */
    #stockChart, #articulosChart {
        width: 100% !important;
        height: 400px !important;
    }

    .pagination {
        margin-top: 20px;
        text-align: center;
    }

    .page-link {
        margin: 0 5px;
        padding: 10px 15px;
        background-color: #007bff;
        color: white;
        border-radius: 5px;
        text-decoration: none;
    }

    .current-page {
        margin: 0 5px;
        padding: 10px 15px;
        background-color: #6c757d;
        color: white;
        border-radius: 5px;
    }
</style>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
        // Obtener los datos dinámicos desde Razor
        var labels = [
        @foreach (var articulo in Model.ArticulosBajoStock)
        {
            @: '@articulo.DescripcionArticulo',
        }
                ];

        var data = [
        @foreach (var articulo in Model.ArticulosBajoStock)
        {
            @: @articulo.PuntoReorden,
        }
                ];

        // Configuración del gráfico de stock
        var ctxStock = document.getElementById('stockChart').getContext('2d');
        var stockChart = new Chart(ctxStock, {
            type: 'bar',
            data: {
                labels: labels, // Etiquetas dinámicas (nombre de los artículos)
                datasets: [{
                    label: 'Stock',
                    data: data, // Datos dinámicos (stock de los artículos)
                    backgroundColor: 'rgba(54, 162, 235, 0.6)',
                    borderWidth: 1
                }]
            },
            options: {
                responsive: true,
                scales: {
                    y: {
                        beginAtZero: true
                    }
                }
            }
        });

        // Configuración del gráfico de artículos bajo stock
        var ctxArticulos = document.getElementById('articulosChart').getContext('2d');
        var articulosChart = new Chart(ctxArticulos, {
            type: 'pie',
            data: {
                labels: labels,
                datasets: [{
                    label: 'Artículos Bajo Stock',
                    data: data,
                    backgroundColor: [
                        'rgba(255, 99, 132, 0.6)',
                        'rgba(54, 162, 235, 0.6)',
                        'rgba(255, 206, 86, 0.6)',
                        'rgba(75, 192, 192, 0.6)',
                        'rgba(153, 102, 255, 0.6)',
                        'rgba(255, 159, 64, 0.6)'
                    ],
                    borderWidth: 1
                }]
            },
            options: {
                responsive: true,
                maintainAspectRatio: false // Asegúrate de que la relación de aspecto se mantenga
            }
        });
    </script>
}
