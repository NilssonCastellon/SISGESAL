@model IEnumerable<SISGESAL.Models.ViewModels.ConfiguraAlmacenArticuloViewModel>

@{
    ViewData["Title"] = "Configuración de Almacén Artículo";
}

<h1>Configuración de Almacén Artículo</h1>


@if (ViewBag.ErrorMessage != null)
{
    <div class="alert alert-warning">
        @ViewBag.ErrorMessage
    </div>
}


<p>
    <button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#createModal">
        <i class="fas fa-plus-circle"></i> Crear Nueva Configuración
    </button>
</p>

<table id="table" class="table">
    <thead>
        <tr>
            <th>#</th> <!-- Nueva columna para el contador -->
            <th>Almacén</th>
            <th>Artículo</th>
            <th>Estado</th>
            <th>Acciones</th>
        </tr>
    </thead>
    <tbody>
        @{
            int contador = 1; // Inicializa el contador
        }
        @foreach (var item in Model)
        {
            <tr>
                <td>@contador</td> <!-- Muestra el contador -->
                <td>@item.AlmacenDescripcion</td>
                <td>@item.ArticuloDescripcion</td>
                <td>@(item.Estado.HasValue ? (item.Estado.Value ? "Activo" : "Inactivo") : "Desconocido")</td>
                <td>
                    <button type="button" class="btn btn-warning" data-bs-toggle="modal" data-bs-target="#editModal"
                            data-id="@item.IdentificadorConfig"
                            data-almacen="@item.IdentificadorAlmacen"
                            data-articulo="@item.IdentificadorArticulo"
                            data-estado="@item.Estado">
                        <i class="fas fa-edit"></i> <!-- Icono de edición -->
                    </button>
                </td>
            </tr>
            contador++; // Incrementa el contador
        }
    </tbody>
</table>


<!-- Modal de Creación -->
<div class="modal fade" id="createModal" tabindex="-1" aria-labelledby="createModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="createModalLabel">Crear Configuración</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <form id="createForm" method="post" action="@Url.Action("Create", "ConfiguraAlmacenArticulo")">
                @Html.AntiForgeryToken()
                <div class="modal-body">
                    <div class="form-group">
                        <label>Almacén Asignado:</label>
                        <input type="text" class="form-control" value="@ViewBag.AlmacenDescripcion" readonly />
                        <input type="hidden" name="IdentificadorAlmacen" value="@ViewBag.AlmacenId" />
                    </div>
                    <div class="form-group">
                        <label for="IdentificadorArticulo">Artículo</label>
                        <select class="form-control" id="IdentificadorArticulo" name="IdentificadorArticulo" required>
                            <option value="">Seleccione un artículo</option>
                            @foreach (var articulo in ViewBag.Articulos as SelectList)
                            {
                                <option value="@articulo.Value">@articulo.Text</option>
                            }
                        </select>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cerrar</button>
                    <button type="submit" class="btn btn-primary">Guardar</button>
                </div>
            </form>
        </div>
    </div>
</div>




<!-- Modal de Edición -->
<div class="modal fade" id="editModal" tabindex="-1" aria-labelledby="editModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="editModalLabel">Editar Configuración</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <form id="editForm" method="post" action="@Url.Action("Edit", "ConfiguraAlmacenArticulo")">
                @Html.AntiForgeryToken()
                <div class="modal-body">
                    <input type="hidden" id="IdentificadorConfig" name="IdentificadorConfig" />
                    <div class="form-group">
                        <label>Almacén Asignado:</label>
                        <input type="text" class="form-control" value="@ViewBag.AlmacenDescripcion" readonly />
                        <input type="hidden" name="IdentificadorAlmacen" value="@ViewBag.AlmacenId" />
                    </div>
                    <div class="form-group">
                        <label for="IdentificadorArticulo">Artículo</label>
                        <select class="form-control" id="IdentificadorArticulo" name="IdentificadorArticulo" required>
                            <option value="">Seleccione un artículo</option>
                            @foreach (var articulo in ViewBag.Articulos as SelectList)
                            {
                                <option value="@articulo.Value">@articulo.Text</option>
                            }
                        </select>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cerrar</button>
                    <button type="submit" class="btn btn-primary">Guardar Cambios</button>
                </div>
            </form>
        </div>
    </div>
</div>




<div class="pagination" id="pagination"></div>

@section Scripts {
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/toastr@2.1.4/build/toastr.min.js"></script>
    <link href="https://cdn.jsdelivr.net/npm/toastr@2.1.4/build/toastr.min.css" rel="stylesheet" />

    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const rowsPerPage = 15;
            const table = document.getElementById('table');
            const pagination = document.getElementById('pagination');
            const rows = Array.from(table.querySelectorAll('tbody tr'));
            const pageCount = Math.ceil(rows.length / rowsPerPage);
            let currentPage = 1;

            function showPage(page) {
                const start = (page - 1) * rowsPerPage;
                const end = start + rowsPerPage;
                rows.forEach((row, index) => {
                    row.style.display = index >= start && index < end ? '' : 'none';
                });
                currentPage = page;
                updatePagination();
            }

            function updatePagination() {
                pagination.innerHTML = '';
                const buttonPrev = document.createElement('li');
                buttonPrev.className = `page-item ${currentPage === 1 ? 'disabled' : ''}`;
                buttonPrev.innerHTML = `<a class="page-link" href="#">Página Anterior</a>`;
                buttonPrev.addEventListener('click', () => {
                    if (currentPage > 1) {
                        showPage(currentPage - 1);
                    }
                });
                pagination.appendChild(buttonPrev);

                for (let i = 1; i <= pageCount; i++) {
                    const button = document.createElement('li');
                    button.className = `page-item ${i === currentPage ? 'active' : ''}`;
                    button.innerHTML = `<a class="page-link" href="#">${i}</a>`;
                    button.addEventListener('click', () => showPage(i));
                    pagination.appendChild(button);
                }

                const buttonNext = document.createElement('li');
                buttonNext.className = `page-item ${currentPage === pageCount ? 'disabled' : ''}`;
                buttonNext.innerHTML = `<a class="page-link" href="#">Página Siguiente</a>`;
                buttonNext.addEventListener('click', () => {
                    if (currentPage < pageCount) {
                        showPage(currentPage + 1);
                    }
                });
                pagination.appendChild(buttonNext);
            }

            showPage(1);
        });

        $(document).ready(function () {
            // Configuración de toastr
            toastr.options = {
                "closeButton": true,
                "debug": false,
                "newestOnTop": false,
                "progressBar": true,
                "positionClass": "toast-top-right",
                "preventDuplicates": false,
                "onclick": null,
                "showDuration": "300",
                "hideDuration": "1000",
                "timeOut": "5000",
                "extendedTimeOut": "1000",
                "showEasing": "swing",
                "hideEasing": "linear",
                "showMethod": "fadeIn",
                "hideMethod": "fadeOut"
            };

            // Manejar la sumisión del formulario de creación
            $('#createForm').on('submit', function (e) {
                e.preventDefault(); // Prevenir la sumisión normal del formulario

                $.ajax({
                    url: $(this).attr('action'),
                    type: 'POST',
                    data: $(this).serialize(),
                    success: function (response) {
                        if (response.success) {
                            toastr.success('Configuración creada con éxito');
                            setTimeout(function () {
                                location.reload();
                            }, 1000);
                        } else {
                            toastr.error(response.message || 'Error inesperado. Inténtalo de nuevo.');
                        }
                    },
                    error: function (xhr) {
                        toastr.error('Error al crear la configuración: ' + (xhr.responseText || 'Inténtalo de nuevo.'));
                    }
                });
            });

            // Este evento se activa cuando se muestra el modal
            // Este evento se activa cuando se muestra el modal
            $('#editModal').on('show.bs.modal', function (event) {
                var button = $(event.relatedTarget);
                var id = button.data('id');
                var almacen = button.data('almacen');
                var articulo = button.data('articulo');

                console.log('ID:', id, 'Almacén:', almacen, 'Artículo:', articulo); // Verifica los valores

                var modal = $(this);
                modal.find('#IdentificadorConfig').val(id);
                modal.find('#IdentificadorAlmacen').val(almacen);
                modal.find('#IdentificadorArticulo').val(articulo);
            });



            // Manejar la sumisión del formulario de edición
            $('#editForm').on('submit', function (e) {
                e.preventDefault(); // Prevenir la sumisión normal del formulario

                $.ajax({
                    url: $(this).attr('action'),
                    type: 'POST',
                    data: $(this).serialize(),
                    success: function (response) {
                        if (response.success) {
                            toastr.success('Configuración modificada con éxito');
                            setTimeout(function () {
                                location.reload();
                            }, 1000); // Recargar la página para mostrar los datos actualizados
                        } else {
                            toastr.error(response.message || 'Error inesperado. Inténtalo de nuevo.');
                        }
                    },
                    error: function (xhr) {
                        toastr.error('Error al editar la configuración: ' + (xhr.responseText || 'Inténtalo de nuevo.'));
                    }
                });
            });
        });
    </script>

}